# Manually triggered using GitHub UI. 
# Please, open Actions tab, choose workflow "Create GitHub Package Manually" and press "Run workflow"
# Tags must be Major.minor.patch, e.g. v0.0.1/v0.0.1-alpha
name: Create GitHub Package Manually

on:
  workflow_dispatch:
    inputs:
      release: 
        description: "Release name. String"
        default: "Test Release"  #TODO autogen mb?
        required: true
      version: #(major: -M, minor: -m, patch: -p)
        description: "Version key(-Mmp).Major.minor.patch,e.g. -M/-m/-p/-mp/etc"
        default: "-p"
        required: true
      draft:
        description: "Draft (release only). Boolean"
        default: "true"
        required: true
      alpha:
        description: "Add Posfix alpha and mark it as a release"
        default: "true"
        required: true
        
jobs:

  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:

    - name: Set up Go latest
      uses: actions/setup-go@v1
      with:
        go-version: 1.14.2
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Increment Step Patch
      id: semver
      uses: leo-ri/increment-semver@master
      with:
        vlevel: ${{ github.event.inputs.version }}
        alpha: ${{ github.event.inputs.alpha }}

    - name: Build Binary
      run: |
        set -x
        ls -l
        echo $(go version)
        version=${{ steps.semver.outputs.version }}
        echo "Building version=${version}"
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -v -ldflags="-s -w -X main.releaseVersion=${version}" -o .
        tar czvf mongodb-atlas-service-broker-$version.tar.gz mongodb-atlas-service-broker

    - name: Make archive
      run: |
        git archive --format=tar.gz -o ./atlas-osb.${{ steps.semver.outputs.version }}.tar.gz --prefix=atlas-osb/ master
          
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.semver.outputs.version }}
        release_name: ${{ github.event.inputs.release }}
        draft: ${{ github.event.inputs.draft }}
        prerelease: ${{ github.event.inputs.alpha }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./atlas-osb.${{ steps.semver.outputs.version }}.tar.gz
        asset_name: atlas-osb.${{ steps.semver.outputs.version }}.tar.gz
        asset_content_type: application/tgz
