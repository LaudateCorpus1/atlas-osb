name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_DEFAULT_OUTPUT: json
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CONTAINER_IMAGE: $${{ github.repository }}:${{ github.sha }}
    name: Build
    runs-on: ubuntu-18.04
    steps:

    - name: Set up Go latest
      uses: actions/setup-go@v1
      with:
        go-version: 1.14.2
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    
    - name: Build Binary
      run: |
        set -x
        ls -l
        echo $(go version)
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -v -ldflags="-s -w -X main.releaseVersion=v1.0.0" -o .
        tar czvf mongodb-atlas-service-broker.tar.gz mongodb-atlas-service-broker
        
    - name: Setup ECR
      run: |
        $( aws ecr get-login --no-include-email )
    
    - name: Build Container
      run: |
        set -x
        docker build \
          -t $CONTAINER_IMAGE \
          -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE .

    - name: Push To ECR
      run: |
        set -x
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE

    - name: Render Amazon ECS task definition
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: aws-ecs-task-definition.json
        container-name: mongodb-atlas-service-broker
        image: $${{ github.repository }}:${{ github.sha }}        

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        service: mongodb-atlas-service-broker
        cluster: mongodb-atlas-service-broker


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./mongodb-atlas-service-broker.tar.gz
        asset_name: mongodb-atlas-service-broker.tar.gz
        asset_content_type: application/tgz

